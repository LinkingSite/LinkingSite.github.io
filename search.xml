<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>godot4制作2D游戏03————创建地图</title>
      <link href="/2025/04/18/godot4_2d/godot4_2d_04/"/>
      <url>/2025/04/18/godot4_2d/godot4_2d_04/</url>
      
        <content type="html"><![CDATA[<h3 id="创建新场景"><a href="#创建新场景" class="headerlink" title="创建新场景"></a>创建新场景</h3><ul><li>创建一个新的节点–TileMapLayer类型<ul><li>从网站下载 grass-01 素材</li><li>创建新tileset，并设置宽高为32px</li><li>在ordering中将zIndex设置为-1，设置为背景</li><li>将图片拖入TileSet中，在下方控制台中</li><li>在TileMapLayer节点中新增一个PhysicsLayer，collision为5（表示在第五层）</li><li>在TileSet中Paint选项中的PhysicsLayer中绘制所需的物理层图案</li><li>将Player的CollisionLayer的Mask层选中为5，表示与第五层的物理层产生碰撞</li><li>创建地形Terrain Set，添加一个Terrain</li><li>在用户节点下添加一个Camera2D节点</li><li>将Player的Motion Mode改为float，角度改为10</li><li>修改Player节点脚本中的_process代码  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">func _process(_delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="comment">#direction.x = Input.get_action_strength(&quot;right&quot;) - Input.get_action_strength(&quot;left&quot;)</span></span><br><span class="line"><span class="comment">#direction.y = Input.get_action_strength(&quot;down&quot;) - Input.get_action_strength(&quot;up&quot;)</span></span><br><span class="line">direction = Vector2(</span><br><span class="line">Input.get_axis(<span class="string">&quot;left&quot;</span>, <span class="string">&quot;right&quot;</span>),</span><br><span class="line">Input.get_axis(<span class="string">&quot;up&quot;</span>, <span class="string">&quot;down&quot;</span>)</span><br><span class="line">).normalized()</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏03————添加人物状态机</title>
      <link href="/2025/04/17/godot4_2d/godot4_2d_03/"/>
      <url>/2025/04/17/godot4_2d/godot4_2d_03/</url>
      
        <content type="html"><![CDATA[<h3 id="添加状态机接口"><a href="#添加状态机接口" class="headerlink" title="添加状态机接口"></a>添加状态机接口</h3><ul><li>创建一个script，名称为state.gd</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class_name State extends Node</span><br><span class="line"></span><br><span class="line">static var player: Player</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br></pre></td></tr></table></figure><p>这个接口是各个状态机方法属性的定义</p><h3 id="为Player添加StateMachine节点"><a href="#为Player添加StateMachine节点" class="headerlink" title="为Player添加StateMachine节点"></a>为Player添加StateMachine节点</h3><ul><li>在Player下创建一个StateMachine的节点<ul><li>在StateMachine下新添加两个子节点Idle和Walk</li></ul></li><li>创建 player_state_machine.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">class_name PlayerStateMachine extends Node</span><br><span class="line"></span><br><span class="line">var states: Array[ State ]</span><br><span class="line">var prev_state: State</span><br><span class="line">var current_state: State</span><br><span class="line"></span><br><span class="line">// 禁用所有StateMachine以及子节点的_process和_physics_process方法</span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">process_mode = Node.PROCESS_MODE_DISABLED</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.Process( delta ))</span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.PhysicsProcess( delta ))</span><br><span class="line"></span><br><span class="line">func _unhandled_input(event: InputEvent) -&gt; void:</span><br><span class="line">ChangeState(current_state.HandleInput( event ))</span><br><span class="line"></span><br><span class="line">// 获取所有子节点状态机并将第一个作为初始状态</span><br><span class="line">func Initialize(player: Player) -&gt; void:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_children():</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">is</span> State:</span><br><span class="line">states.append(c)</span><br><span class="line"><span class="keyword">if</span> states.size() &gt; <span class="number">0</span>:</span><br><span class="line">states[<span class="number">0</span>].player = player</span><br><span class="line">ChangeState(states[<span class="number">0</span>])</span><br><span class="line">process_mode = Node.PROCESS_MODE_INHERIT</span><br><span class="line"></span><br><span class="line">func ChangeState(new_state: State) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> new_state == null || new_state  == current_state:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> current_state:</span><br><span class="line">current_state.Exit()</span><br><span class="line"></span><br><span class="line">prev_state = current_state</span><br><span class="line">current_state = new_state</span><br><span class="line">current_state.Enter()</span><br></pre></td></tr></table></figure><ul><li>将 player_state_machine.md 挂载到StateMachine节点上</li></ul></li></ul><h3 id="创建两个子状态的脚本"><a href="#创建两个子状态的脚本" class="headerlink" title="创建两个子状态的脚本"></a>创建两个子状态的脚本</h3><ul><li><p>state_idle.gd</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">class_name StateIdle extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var walk: StateWalk = $<span class="string">&quot;../Walk&quot;</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;idle&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction != Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> walk</span><br><span class="line">player.velocity = Vector2.ZERO</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line">class_name StateIdle extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var walk: StateWalk = $<span class="string">&quot;../Walk&quot;</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;idle&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction != Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> walk</span><br><span class="line">player.velocity = Vector2.ZERO</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>state_walk.gd</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class_name StateWalk extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var idle: StateIdle = $<span class="string">&quot;../Idle&quot;</span></span></span><br><span class="line">var move_speed: <span class="built_in">float</span> = <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;walk&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> idle</span><br><span class="line"></span><br><span class="line">player.velocity = player.direction * move_speed</span><br><span class="line"><span class="keyword">if</span> player.SetDirection():</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;walk&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改Player节点的脚本"><a href="#修改Player节点的脚本" class="headerlink" title="修改Player节点的脚本"></a>修改Player节点的脚本</h3><ul><li>player.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"><span class="meta">@onready var state_machine: PlayerStateMachine = $StateMachine</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">state_machine.Initialize(<span class="variable language_">self</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">move_and_slide()</span><br><span class="line"></span><br><span class="line">func SetDirection() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">var new_dir: Vector2 = cardinal_direction</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"><span class="keyword">if</span> direction.y == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.LEFT <span class="keyword">if</span> direction.x &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.RIGHT</span><br><span class="line"><span class="keyword">if</span> direction.x == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.UP <span class="keyword">if</span> direction.y &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.DOWN</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">func UpdateAnimation(state: String) -&gt; void:</span><br><span class="line">animation_player.play(state + <span class="string">&quot;_&quot;</span> + AnimationDirection())</span><br><span class="line"></span><br><span class="line">func AnimationDirection() -&gt; String:</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == Vector2.DOWN:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;down&quot;</span></span><br><span class="line"><span class="keyword">elif</span> cardinal_direction == Vector2.UP:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;up&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;side&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>创建一个StateMachine的节点，下面挂载多个子节点，通过获取子节点的方式动态扩展</li><li>用户节点脚本不再直接调用动画渲染，只修改direction</li><li>在执行StateMachine的_process和_physics_process方法时，调用当前State的对应方法来处理动画</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏02————添加人物移动动画</title>
      <link href="/2025/04/16/godot4_2d/godot4_2d_02/"/>
      <url>/2025/04/16/godot4_2d/godot4_2d_02/</url>
      
        <content type="html"><![CDATA[<h2 id="添加人物移动动画"><a href="#添加人物移动动画" class="headerlink" title="添加人物移动动画"></a>添加人物移动动画</h2><h3 id="创建动画"><a href="#创建动画" class="headerlink" title="创建动画"></a>创建动画</h3><ul><li><p>动画一般有两种节点，一种为 AnimationPlayer, 另一种是 AnimatableSprite2D</p><ul><li>AnimationPlayer 功能更强大</li><li>AnimatableSprite2D 使用简但功能少</li></ul></li><li><p>在Player下创建一个AnimationPlayer节点</p><ul><li>在下方会出现一个工作台，创建新动画</li><li>选中Sprite2D节点，然后在Animation属性中找到frame，点击钥匙加号</li><li>然后在下方创建几个动画，idle和walk各三个</li></ul></li><li><p>在Player.gd脚本中添加一些代码</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line">var state: String = <span class="string">&quot;idle&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br></pre></td></tr></table></figure><ul><li>可以单击节点按住然后按command拖到gd脚本中来创建引用节点</li></ul></li></ul><h3 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h3><ul><li>修改Player.md代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">// 将属性和需要的节点抽取出来</span><br><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line">var state: String = <span class="string">&quot;idle&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"></span><br><span class="line">velocity = direction * move_speed</span><br><span class="line">    // 如果状态或者方向改变了就更新</span><br><span class="line"><span class="keyword">if</span> SetState() || SetDirection():</span><br><span class="line">UpdateAnimation()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">move_and_slide()</span><br><span class="line"></span><br><span class="line">// cardinal_direction是保持的状态方向，比如说之前向上，但是不按方向键也要维持向上的状态</span><br><span class="line">// direction是按键运动的方向，按方向键之后要更新方向</span><br><span class="line">func SetDirection() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">var new_dir: Vector2 = cardinal_direction</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"><span class="keyword">if</span> direction.y == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.LEFT <span class="keyword">if</span> direction.x &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.RIGHT</span><br><span class="line"><span class="keyword">if</span> direction.x == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.UP <span class="keyword">if</span> direction.y &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.DOWN</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">// 判断空闲状态还是行走状态，idle或walk</span><br><span class="line">func SetState() -&gt; <span class="built_in">bool</span>: </span><br><span class="line">var new_state: String = <span class="string">&quot;idle&quot;</span> <span class="keyword">if</span> direction == Vector2.ZERO <span class="keyword">else</span> <span class="string">&quot;walk&quot;</span></span><br><span class="line"><span class="keyword">if</span> new_state == state:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">state = new_state</span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">// 更新需要运行的动画</span><br><span class="line">func UpdateAnimation() -&gt; void:</span><br><span class="line">animation_player.play(state + <span class="string">&quot;_&quot;</span> + AnimationDirection())</span><br><span class="line"></span><br><span class="line">func AnimationDirection() -&gt; String:</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == Vector2.DOWN:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;down&quot;</span></span><br><span class="line"><span class="keyword">elif</span> cardinal_direction == Vector2.UP:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;up&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;side&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏01————创建可移动人物</title>
      <link href="/2025/04/15/godot4_2d/godot4_2d_01/"/>
      <url>/2025/04/15/godot4_2d/godot4_2d_01/</url>
      
        <content type="html"><![CDATA[<h2 id="创建人物"><a href="#创建人物" class="headerlink" title="创建人物"></a>创建人物</h2><ul><li><p>创建2D场景，添加子节点CharacterBody2D类型</p></li><li><p>为CharacterBody2D添加一个碰撞类型，先选择圆形即可</p></li><li><p>从网站下载所需图片</p><ul><li><a href="https://michaelgames.itch.io/2d-action-adventure-rpg-assets">https://michaelgames.itch.io/2d-action-adventure-rpg-assets</a></li></ul></li><li><p>将文件导入项目，并创建Sprite，将Animtion的Hframes改为21</p></li><li><p>该项目为像素风格，所以需要修改一些项目参数</p><ul><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; window width 480 height 270</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; stretch viewpoint(很适合像素风)</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; 高级选项 -&gt; window width override -&gt; 1920</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; 高级选项 -&gt; window height override -&gt; 1080</li><li>project -&gt; project setting -&gt; general -&gt; rending -&gt; textures -&gt; default texture filter-&gt; nearest</li></ul></li><li><p>添加按键控制</p><ul><li>project -&gt; project setting -&gt; input map <ul><li>添加上下左右控制即可</li></ul></li></ul></li><li><p>将Player save as scene 单独保存为一个场景</p></li></ul><h2 id="为Player添加代码"><a href="#为Player添加代码" class="headerlink" title="为Player添加代码"></a>为Player添加代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">    var direction: Vector2 = Vector2.ZERO</span><br><span class="line">    direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">    direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"></span><br><span class="line">    velocity = direction * move_speed</span><br><span class="line">    <span class="built_in">print</span>(velocity)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">    move_and_slide()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
