<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>godot4制作2D游戏16———资源库(Part 1)</title>
      <link href="/2025/05/03/godot4_2d/godot4_2d_16/"/>
      <url>/2025/05/03/godot4_2d/godot4_2d_16/</url>
      
        <content type="html"><![CDATA[<h3 id="创建Items文件夹"><a href="#创建Items文件夹" class="headerlink" title="创建Items文件夹"></a>创建Items文件夹</h3><ul><li><p>创建Items文件夹用以保存相应的图片和脚本</p><ul><li>创建脚本item_data</li><li>创建三个ItemData资源</li></ul></li><li><p>在pause下创建inventory文件夹并创建库存样式</p><ul><li>库存为一个按钮，里面是texture和label</li><li>如果需要键盘控制可以将他们都放在一个control里面</li><li>创建inventory_ui.gd文件  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class_name InventoryUI extends Control</span><br><span class="line"></span><br><span class="line">const INVENTORY_SLOT = preload(<span class="string">&quot;res://GUI/pause_menu/inventory/inventory_slot.tscn&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var pause_menu: CanvasLayer = $<span class="string">&quot;../../..&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export var data: InventoryData</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Called when the node enters the scene tree for the first time.</span></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">PauseMenu.Shown.connect(update_inventory)</span><br><span class="line">PauseMenu.Hidden.connect(clear_inventory)</span><br><span class="line">clear_inventory()</span><br><span class="line"><span class="keyword">pass</span> <span class="comment"># Replace with function body.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func update_inventory() -&gt; void:</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> data.slots:</span><br><span class="line">var new_slot = INVENTORY_SLOT.instantiate()</span><br><span class="line">add_child(new_slot)</span><br><span class="line">new_slot.slot_data = s</span><br><span class="line">get_child(<span class="number">0</span>).grab_focus()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func clear_inventory() -&gt; void:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_children():</span><br><span class="line">c.queue_free()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>本次ui结构</p><ul><li>有一个PanelContainer，下面还有个GridContainer</li><li>GridContainer就是inventory_ui，它包含一个InventoryData</li><li>InventoryData里面有个SlotData数组</li><li>SlotData里面有item和数量</li><li>item里面有各种物品详细信息</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏15———基础的Save和Load</title>
      <link href="/2025/04/23/godot4_2d/godot4_2d_15/"/>
      <url>/2025/04/23/godot4_2d/godot4_2d_15/</url>
      
        <content type="html"><![CDATA[<h2 id="基础的Save和Load功能"><a href="#基础的Save和Load功能" class="headerlink" title="基础的Save和Load功能"></a>基础的Save和Load功能</h2><h3 id="在GUI下创建新的文件夹pause-menu"><a href="#在GUI下创建新的文件夹pause-menu" class="headerlink" title="在GUI下创建新的文件夹pause_menu"></a>在GUI下创建新的文件夹pause_menu</h3><ul><li>创建新的文件夹以及场景和脚本，名称都为pause_menu<ul><li>创建一些节点来描述页面</li><li>Process下的mode要选择Always</li></ul></li><li>将pause_menu场景加载到Autoload中</li><li>编写pause_menu.gd代码  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">extends CanvasLayer</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var button_save: Button = $VBoxContainer/Button_Save</span></span><br><span class="line"><span class="meta">@onready var button_load: Button = $VBoxContainer/Button_Load</span></span><br><span class="line"></span><br><span class="line">var is_paused: <span class="built_in">bool</span> = false</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">hide_pause_menu()</span><br><span class="line">button_load.pressed.connect(_on_load_pressed)</span><br><span class="line">button_save.pressed.connect(_on_save_pressed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _unhandled_input(event: InputEvent) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> event.is_action_pressed(<span class="string">&quot;pause&quot;</span>):</span><br><span class="line"><span class="keyword">if</span> is_paused == false:</span><br><span class="line">show_pause_menu()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">hide_pause_menu()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line">get_viewport().set_input_as_handled()</span><br><span class="line"></span><br><span class="line">func show_pause_menu():</span><br><span class="line">get_tree().paused = true</span><br><span class="line">visible = true</span><br><span class="line">is_paused = true</span><br><span class="line">button_save.grab_focus()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func hide_pause_menu():</span><br><span class="line">get_tree().paused = false</span><br><span class="line">visible = false</span><br><span class="line">is_paused = false</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _on_save_pressed() -&gt; void:</span><br><span class="line"><span class="keyword">if</span> is_paused == false:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">SaveManager.save_game()</span><br><span class="line">hide_pause_menu()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _on_load_pressed() -&gt; void:</span><br><span class="line"><span class="keyword">if</span> is_paused == false:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">SaveManager.load_game()</span><br><span class="line">hide_pause_menu()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>创建一个全局的save_manager  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">extends Node</span><br><span class="line"></span><br><span class="line">const SAVE_PATH = <span class="string">&quot;user://&quot;</span></span><br><span class="line"></span><br><span class="line">signal game_loaded</span><br><span class="line">signal game_saved</span><br><span class="line"></span><br><span class="line">var current_save: Dictionary = &#123;</span><br><span class="line">scene_path = <span class="string">&quot;&quot;</span>,</span><br><span class="line">player = &#123;</span><br><span class="line">hp = <span class="number">1</span>,</span><br><span class="line">max_hp = <span class="number">1</span>,</span><br><span class="line">pos_x = <span class="number">0</span>,</span><br><span class="line">pos_y = <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line">items = [],</span><br><span class="line">persistence = [],</span><br><span class="line">quests = []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func save_game() -&gt; void:</span><br><span class="line">update_player_data()</span><br><span class="line">update_scene_path()</span><br><span class="line">var file := FileAccess.<span class="built_in">open</span>(SAVE_PATH + <span class="string">&quot;save.sav&quot;</span>, FileAccess.WRITE)</span><br><span class="line">var save_json = JSON.stringify(current_save)</span><br><span class="line">file.store_line(save_json)</span><br><span class="line">game_saved.emit()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func load_game() -&gt; void:</span><br><span class="line">var file := FileAccess.<span class="built_in">open</span>(SAVE_PATH + <span class="string">&quot;save.sav&quot;</span>, FileAccess.READ)</span><br><span class="line">var json := JSON.new()</span><br><span class="line">json.parse(file.get_line())</span><br><span class="line">var save_dict: Dictionary = json.get_data() <span class="keyword">as</span> Dictionary</span><br><span class="line">current_save = save_dict</span><br><span class="line"></span><br><span class="line">LevelManager.load_new_level(current_save.scene_path, <span class="string">&quot;&quot;</span>, Vector2.ZERO)</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> LevelManager.LevelLoadStarted</span><br><span class="line"></span><br><span class="line">PlayerManager.set_player_position(Vector2(current_save.player.pos_x,current_save.player.pos_y))</span><br><span class="line">PlayerManager.set_health(current_save.player.hp, current_save.player.max_hp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> LevelManager.LevelLoaded</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_player_data() -&gt; void:</span><br><span class="line">var p: Player = PlayerManager.player</span><br><span class="line">current_save.player.hp = p.hp</span><br><span class="line">current_save.player.max_hp = p.max_hp</span><br><span class="line">current_save.player.pos_x = p.global_position.x</span><br><span class="line">current_save.player.pos_y = p.global_position.y</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_scene_path() -&gt; void:</span><br><span class="line">var p: String = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_tree().root.get_children():</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">is</span> Level:</span><br><span class="line">p = c.scene_file_path</span><br><span class="line">current_save.scene_path = p</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line">extends Node</span><br><span class="line"></span><br><span class="line">const SAVE_PATH = <span class="string">&quot;user://&quot;</span></span><br><span class="line"></span><br><span class="line">signal game_loaded</span><br><span class="line">signal game_saved</span><br><span class="line"></span><br><span class="line">var current_save: Dictionary = &#123;</span><br><span class="line">scene_path = <span class="string">&quot;&quot;</span>,</span><br><span class="line">player = &#123;</span><br><span class="line">hp = <span class="number">1</span>,</span><br><span class="line">max_hp = <span class="number">1</span>,</span><br><span class="line">pos_x = <span class="number">0</span>,</span><br><span class="line">pos_y = <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line">items = [],</span><br><span class="line">persistence = [],</span><br><span class="line">quests = []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func save_game() -&gt; void:</span><br><span class="line">update_player_data()</span><br><span class="line">update_scene_path()</span><br><span class="line">var file := FileAccess.<span class="built_in">open</span>(SAVE_PATH + <span class="string">&quot;save.sav&quot;</span>, FileAccess.WRITE)</span><br><span class="line">var save_json = JSON.stringify(current_save)</span><br><span class="line">file.store_line(save_json)</span><br><span class="line">game_saved.emit()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func load_game() -&gt; void:</span><br><span class="line">var file := FileAccess.<span class="built_in">open</span>(SAVE_PATH + <span class="string">&quot;save.sav&quot;</span>, FileAccess.READ)</span><br><span class="line">var json := JSON.new()</span><br><span class="line">json.parse(file.get_line())</span><br><span class="line">var save_dict: Dictionary = json.get_data() <span class="keyword">as</span> Dictionary</span><br><span class="line">current_save = save_dict</span><br><span class="line"></span><br><span class="line">LevelManager.load_new_level(current_save.scene_path, <span class="string">&quot;&quot;</span>, Vector2.ZERO)</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> LevelManager.LevelLoadStarted</span><br><span class="line"></span><br><span class="line">PlayerManager.set_player_position(Vector2(current_save.player.pos_x,current_save.player.pos_y))</span><br><span class="line">PlayerManager.set_health(current_save.player.hp, current_save.player.max_hp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> LevelManager.LevelLoaded</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_player_data() -&gt; void:</span><br><span class="line">var p: Player = PlayerManager.player</span><br><span class="line">current_save.player.hp = p.hp</span><br><span class="line">current_save.player.max_hp = p.max_hp</span><br><span class="line">current_save.player.pos_x = p.global_position.x</span><br><span class="line">current_save.player.pos_y = p.global_position.y</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_scene_path() -&gt; void:</span><br><span class="line">var p: String = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_tree().root.get_children():</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">is</span> Level:</span><br><span class="line">p = c.scene_file_path</span><br><span class="line">current_save.scene_path = p</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="鼠标问题"><a href="#鼠标问题" class="headerlink" title="鼠标问题"></a>鼠标问题</h3><ul><li>由于playerHud层在保存层上方，所以鼠标没有办法直接点击到按钮，如果需要的话可以将PlayerHud层的Mouse-&gt;Filter设置乘Ignore</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏14———场景管理</title>
      <link href="/2025/04/23/godot4_2d/godot4_2d_14/"/>
      <url>/2025/04/23/godot4_2d/godot4_2d_14/</url>
      
        <content type="html"><![CDATA[<h3 id="创建多个关卡"><a href="#创建多个关卡" class="headerlink" title="创建多个关卡"></a>创建多个关卡</h3><ul><li>每个关卡的根节点都要绑定level.gd作为脚本文件<ul><li>修改level.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class_name Level extends Node2D</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="variable language_">self</span>.y_sort_enabled = true</span><br><span class="line">PlayerManager.set_as_parent(<span class="variable language_">self</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _exit_tree() -&gt; void:</span><br><span class="line">PlayerManager.unparent(<span class="variable language_">self</span>)</span><br><span class="line">queue_free()</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="创建场景转换Scene"><a href="#创建场景转换Scene" class="headerlink" title="创建场景转换Scene"></a>创建场景转换Scene</h3><ul><li><p>创建一个新Scene，命名为level_transition</p><ul><li>根节点改为Area2D</li><li>添加CollisionShape2D节点</li><li>取消monitorable，mask layer选择1，表示不被监控但与1层的玩家可碰撞</li><li>创建level_transition.gd脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@tool </span></span><br><span class="line">class_name LevelTransition extends Area2D</span><br><span class="line"></span><br><span class="line">enum SIDE &#123;LEFT, RIGHT, TOP, BOTTOM&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@export_file(<span class="params"><span class="string">&quot;*.tscn&quot;</span></span>) var level</span></span><br><span class="line"><span class="meta">@export var target_transition_area: String = <span class="string">&quot;LevelTransition&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export_category(<span class="params"><span class="string">&quot;Collision Area Setting&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@export var snap_to_grid: bool = false :</span></span><br><span class="line"><span class="built_in">set</span>(_v):</span><br><span class="line">snap_to_grid = _v</span><br><span class="line">_snap_to_grid()</span><br><span class="line"></span><br><span class="line"><span class="meta">@export_range(<span class="params"><span class="number">1</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="string">&quot;or_greater&quot;</span></span>) var size: int = <span class="number">2</span> :</span></span><br><span class="line"><span class="built_in">set</span>(_v):</span><br><span class="line">size = _v</span><br><span class="line">_update_area()</span><br><span class="line"><span class="meta">@export var side: SIDE = SIDE.LEFT :</span></span><br><span class="line"><span class="built_in">set</span>(_v):</span><br><span class="line">side = _v</span><br><span class="line">_update_area()</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var collision_shape: CollisionShape2D = $CollisionShape2D</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">_update_area()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> Engine.is_editor_hint():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">monitoring = false</span><br><span class="line">_place_player()</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> LevelManager.LevelLoaded</span><br><span class="line"></span><br><span class="line">monitoring = true</span><br><span class="line"></span><br><span class="line">body_entered.connect(_player_entered)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  _player_entered(_p: Node2D) -&gt; void:</span><br><span class="line">LevelManager.load_new_level(level, target_transition_area, get_offset())</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _place_player() -&gt; void:</span><br><span class="line"><span class="keyword">if</span> name != LevelManager.target_transition:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">PlayerManager.set_player_position(global_position + LevelManager.position_offset)</span><br><span class="line"></span><br><span class="line">func get_offset() -&gt; Vector2:</span><br><span class="line">var offset: Vector2 = Vector2.ZERO</span><br><span class="line">var player_pos = PlayerManager.player.global_position</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> side == SIDE.LEFT <span class="keyword">or</span> side == SIDE.RIGHT:</span><br><span class="line">offset.y = player_pos.y - global_position.y</span><br><span class="line">offset.x = <span class="number">16</span></span><br><span class="line"><span class="keyword">if</span> side == SIDE.LEFT:</span><br><span class="line">offset.x *= -<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">offset.x = player_pos.x - global_position.x</span><br><span class="line">offset.y = <span class="number">16</span></span><br><span class="line"><span class="keyword">if</span> side == SIDE.TOP:</span><br><span class="line">offset.y *= -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> offset </span><br><span class="line"></span><br><span class="line">func _update_area() -&gt; void:</span><br><span class="line">var position: Vector2 = Vector2.ZERO</span><br><span class="line">var new_rect: Vector2 = Vector2(<span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> side  == SIDE.TOP:</span><br><span class="line">new_rect.x *= size</span><br><span class="line">position.y -= <span class="number">16</span></span><br><span class="line"><span class="keyword">elif</span> side  == SIDE.BOTTOM:</span><br><span class="line">new_rect.x *= size</span><br><span class="line">position.y += <span class="number">16</span></span><br><span class="line"><span class="keyword">elif</span> side  == SIDE.LEFT:</span><br><span class="line">new_rect.y *= size</span><br><span class="line">position.x -= <span class="number">16</span></span><br><span class="line"><span class="keyword">elif</span> side  == SIDE.RIGHT:</span><br><span class="line">new_rect.y *= size</span><br><span class="line">position.x += <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> collision_shape == null:</span><br><span class="line">collision_shape = get_node(<span class="string">&quot;CollisionShape2D&quot;</span>)</span><br><span class="line">collision_shape.shape.size = new_rect</span><br><span class="line">collision_shape.position = position</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _snap_to_grid() -&gt; void:</span><br><span class="line">position.x = roundi(position.x / <span class="number">16</span>) * <span class="number">16</span></span><br><span class="line">position.y = roundi(position.y / <span class="number">16</span>) * <span class="number">16</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>level_transition场景中的形状下有个Resource下有个local to scene，点击选中</li><li>通过level_transition将三个场景连接起来</li><li>修改global_level_manager脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">extends Node</span><br><span class="line"></span><br><span class="line">signal LevelLoadStarted</span><br><span class="line">signal LevelLoaded</span><br><span class="line">signal TileMapBoundsChanged(bounds: Array[Vector2])</span><br><span class="line"></span><br><span class="line">var current_tilemap_bounds: Array[Vector2]</span><br><span class="line">var target_transition: String</span><br><span class="line">var position_offset: Vector2</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">await</span> get_tree().process_frame</span><br><span class="line">LevelLoaded.emit()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func ChangeTileMapBounds(bounds: Array[Vector2]) -&gt; void:</span><br><span class="line">current_tilemap_bounds = bounds</span><br><span class="line">TileMapBoundsChanged.emit(bounds)</span><br><span class="line"></span><br><span class="line">func load_new_level(</span><br><span class="line">level_path: String,</span><br><span class="line">_target_transition: String,</span><br><span class="line">_position_offset: Vector2</span><br><span class="line">) -&gt; void:</span><br><span class="line">get_tree().paused = true</span><br><span class="line">target_transition = _target_transition</span><br><span class="line">position_offset = _position_offset</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> SceneTransition.fade_in()</span><br><span class="line"></span><br><span class="line">LevelLoadStarted.emit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> get_tree().process_frame</span><br><span class="line"></span><br><span class="line">get_tree().change_scene_to_file(level_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> SceneTransition.fade_out()</span><br><span class="line"></span><br><span class="line">get_tree().paused = false</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> get_tree().process_frame</span><br><span class="line"></span><br><span class="line">LevelLoaded.emit()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>创建一个新的转场scene，并添加到autoload  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">extends CanvasLayer</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $Control/AnimationPlayer</span></span><br><span class="line"></span><br><span class="line">func fade_out() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">animation_player.play(<span class="string">&quot;fade_out&quot;</span>)</span><br><span class="line"><span class="keyword">await</span> animation_player.animation_finished</span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">func fade_in() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">animation_player.play(<span class="string">&quot;fade_in&quot;</span>)</span><br><span class="line"><span class="keyword">await</span> animation_player.animation_finished</span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>tool注解可以在编辑器中运行，直接可以看到效果，不需要在游戏运行后才看到效果</p></li><li><p>有些代码不需要编辑器执行的话需要注意</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏13———用户关卡配置</title>
      <link href="/2025/04/22/godot4_2d/godot4_2d_13/"/>
      <url>/2025/04/22/godot4_2d/godot4_2d_13/</url>
      
        <content type="html"><![CDATA[<h3 id="创建Spwan场景"><a href="#创建Spwan场景" class="headerlink" title="创建Spwan场景"></a>创建Spwan场景</h3><ul><li><p>创建一个新场景，只需要一张图片代表Player</p><ul><li>添加脚本player_spawn.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends Node2D</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">visible = false</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> PlayerManager.player_spawned:</span><br><span class="line">PlayerManager.set_player_position(global_position)</span><br><span class="line">PlayerManager.player_spawned = true</span><br><span class="line"><span class="built_in">print</span>(global_position)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>修改PlayerManager脚本</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">extends Node</span><br><span class="line"></span><br><span class="line">const PLAYER = preload(<span class="string">&quot;res://Player/player.tscn&quot;</span>)</span><br><span class="line"></span><br><span class="line">var player: Player</span><br><span class="line">var player_spawned: <span class="built_in">bool</span> = false</span><br><span class="line"></span><br><span class="line">func  _ready() -&gt; void:</span><br><span class="line">add_player_instance()</span><br><span class="line"><span class="keyword">await</span> get_tree().create_timer(<span class="number">0.2</span>).timeout</span><br><span class="line">player_spawned = true</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func add_player_instance() -&gt; void:</span><br><span class="line">player = PLAYER.instantiate()</span><br><span class="line">add_child(player)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func set_player_position(_pos: Vector2) -&gt; void:</span><br><span class="line">player.global_position  = _pos</span><br><span class="line"></span><br><span class="line">func set_as_parent(_p: Node2D) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> player.get_parent():</span><br><span class="line">player.get_parent().remove_child(player)</span><br><span class="line">_p.add_child(player)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func unparent(_p: Node2D) -&gt; void:</span><br><span class="line">_p.remove_child(player)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>playground添加脚本level.gd</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class_name Level extends Node2D</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="variable language_">self</span>.y_sort_enabled = true</span><br><span class="line">PlayerManager.set_as_parent(<span class="variable language_">self</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>调整Autoload加载顺序</p><ul><li>player初始化时依赖PlayerHud，将其提前</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏12———用户界面</title>
      <link href="/2025/04/22/godot4_2d/godot4_2d_12/"/>
      <url>/2025/04/22/godot4_2d/godot4_2d_12/</url>
      
        <content type="html"><![CDATA[<h3 id="新建用户场景"><a href="#新建用户场景" class="headerlink" title="新建用户场景"></a>新建用户场景</h3><ul><li>创建一个canvasLayer节点作为新的PlayerHud场景<ul><li>在下面创建一个Control节点</li><li>在Control节点下创建一个Sprite节点，导入素材</li><li>在Control下面创建一个HFlowContainer节点<ul><li>在HFlowContainer节点下创建一个Control，作为HeartGUI场景</li><li>编写脚本heart_gui.gd并在其节点下添加Sprite子节点  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class_name HeartGUI extends Control</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"></span><br><span class="line">var value: <span class="built_in">int</span> = <span class="number">2</span> :</span><br><span class="line"><span class="built_in">set</span> (_value):</span><br><span class="line">value = _value</span><br><span class="line">update_sprite()</span><br><span class="line"></span><br><span class="line">func update_sprite() -&gt; void:</span><br><span class="line">sprite.frame = value</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>添加PlayerHud到AutoLoad</li><li>添加PlayerHud的脚本文件  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">extends CanvasLayer</span><br><span class="line"></span><br><span class="line">var hearts: Array[HeartGUI] = []</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">for</span> heart <span class="keyword">in</span> $Control/HFlowContainer.get_children():</span><br><span class="line"><span class="keyword">if</span> heart <span class="keyword">is</span> HeartGUI:</span><br><span class="line">hearts.append(heart)</span><br><span class="line">heart.visible = false</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_hp(_hp: <span class="built_in">int</span>, _max_hp: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line">update_max_hp(_max_hp)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> _max_hp:</span><br><span class="line">update_heart(i, _hp)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_heart(_index: <span class="built_in">int</span>, _hp: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line">var _value = clampi(_hp - _index * <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">hearts[_index].value = _value</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func update_max_hp(_max_hp: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line">var _count: <span class="built_in">int</span> = roundi(_max_hp * <span class="number">0.5</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> _max_hp:</span><br><span class="line"><span class="keyword">if</span> i &lt; _count:</span><br><span class="line">hearts[i].visible = true</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">hearts[i].visible = false</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏11———玩家眩晕状态</title>
      <link href="/2025/04/22/godot4_2d/godot4_2d_11/"/>
      <url>/2025/04/22/godot4_2d/godot4_2d_11/</url>
      
        <content type="html"><![CDATA[<h3 id="修改伤害传输机制"><a href="#修改伤害传输机制" class="headerlink" title="修改伤害传输机制"></a>修改伤害传输机制</h3><ul><li>将之前damaged相关信号传入的伤害值都转为HurtBox</li><li>之后触发伤害时按照HurtBox的伤害和方向计算相关数据</li></ul><h3 id="玩家受伤功能"><a href="#玩家受伤功能" class="headerlink" title="玩家受伤功能"></a>玩家受伤功能</h3><ul><li>引入新的资源文件</li><li>为Player添加HitBox</li><li>创建stun动画<ul><li>单独创建一个AnimationPlayer来播放闪烁特效</li></ul></li><li>添加stun节点和脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">class_name StateStun extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var idle: StateIdle = $<span class="string">&quot;../Idle&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export var decelerate_speed: float = <span class="number">10.0</span></span></span><br><span class="line"><span class="meta">@export var knockback_speed: float = <span class="number">200.0</span></span></span><br><span class="line"><span class="meta">@export var invulnerable_duration: float = <span class="number">1.0</span></span></span><br><span class="line"></span><br><span class="line">var direction: Vector2</span><br><span class="line">var hurt_box: HurtBox</span><br><span class="line">var next_state: State = null</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line">player.PlayerDamaged.connect(_on_player_damaged)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.animation_player.animation_finished.connect(_animation_finished)</span><br><span class="line">direction = player.global_position.direction_to(hurt_box.global_position)</span><br><span class="line">player.velocity = direction * -knockback_speed</span><br><span class="line">player.SetDirection()</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;stun&quot;</span>)</span><br><span class="line">player.make_invulnerable(invulnerable_duration)</span><br><span class="line">player.effect_animation_player.play(<span class="string">&quot;damaged&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line">next_state = null</span><br><span class="line">player.animation_player.animation_finished.disconnect(_animation_finished)</span><br><span class="line"><span class="keyword">pass</span> </span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line">player.velocity -= player.velocity * decelerate_speed * _delta</span><br><span class="line"><span class="keyword">return</span> next_state</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(_event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func _on_player_damaged(_hurt_box: HurtBox) -&gt; void:</span><br><span class="line">hurt_box = _hurt_box</span><br><span class="line">stateMachine.ChangeState(<span class="variable language_">self</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _animation_finished(_a: String) -&gt; void:</span><br><span class="line">next_state = idle</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>修改player脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">signal PlayerDamaged(hurt_box: HurtBox)</span><br><span class="line"></span><br><span class="line">var hp: <span class="built_in">int</span> = <span class="number">6</span></span><br><span class="line">var max_hp: <span class="built_in">int</span> = <span class="number">6</span></span><br><span class="line">var invulnerable: <span class="built_in">bool</span> = false</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">func _take_damage(hurt_box: HurtBox) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> invulnerable:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">update_hp(-hurt_box.damage)</span><br><span class="line">PlayerDamaged.emit(hurt_box)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func update_hp(delta: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line">hp = clampi(hp + delta, <span class="number">0</span>, max_hp)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func make_invulnerable(invulnerable_duration: <span class="built_in">float</span> = <span class="number">1.0</span>) -&gt; void:</span><br><span class="line">invulnerable = true</span><br><span class="line">hit_box.monitoring = false</span><br><span class="line"><span class="keyword">await</span> get_tree().create_timer(invulnerable_duration).timeout</span><br><span class="line">hit_box.monitoring = true</span><br><span class="line">invulnerable = false</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="流程梳理"><a href="#流程梳理" class="headerlink" title="流程梳理"></a>流程梳理</h3><ul><li>玩家的HitBox被击中后触发信号，触发HitBox中的damaged方法</li><li>HitBox的damaged方法触发的damaged信号</li><li>玩家监听damaged信号，收到信号后发送PlayerDamaged信号</li><li>stun脚本监听playerdamaged信号，去进行相应处理</li><li>hurtbox击中hitbox -&gt; hitbox被击中 -&gt; 玩家被击中 -&gt; 相应状态进行处理</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏10———创建简单敌人（二）</title>
      <link href="/2025/04/21/godot4_2d/godot4_2d_10/"/>
      <url>/2025/04/21/godot4_2d/godot4_2d_10/</url>
      
        <content type="html"><![CDATA[<h3 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h3><ul><li>将DestroySmoke、hit_00、hit_01这几个资源导入项目</li><li>添加一个HurtBox，并添加一个CollisionShape2D</li><li>创建两个新的State<ul><li>Stun  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyStateStun extends EnemyState</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var anmi_name: String = <span class="string">&quot;stun&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export_category(<span class="params"><span class="string">&quot;AI&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@export var knockback_speed: float = <span class="number">200.0</span></span></span><br><span class="line"><span class="meta">@export var decelebrate_speed: float = <span class="number">10.0</span></span></span><br><span class="line"><span class="meta">@export var next_state: EnemyState</span></span><br><span class="line"></span><br><span class="line">var direction: Vector2</span><br><span class="line">var animation_finished: <span class="built_in">bool</span> = false</span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line">enemy.EnemyDamaged.connect(_on_enemy_damaged)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">enemy.invulnerable = true</span><br><span class="line">animation_finished = false</span><br><span class="line">direction = enemy.global_position.direction_to(enemy.player.global_position)</span><br><span class="line">enemy.SetDirection(direction)</span><br><span class="line">enemy.velocity = direction * -knockback_speed</span><br><span class="line">enemy.UpdateAnimation(anmi_name)</span><br><span class="line">enemy.animation_player.animation_finished.connect(_on_animation_finsihed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line">enemy.invulnerable = false</span><br><span class="line">enemy.animation_player.animation_finished.disconnect(_on_animation_finsihed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">if</span> animation_finished:</span><br><span class="line"><span class="keyword">return</span> next_state</span><br><span class="line">enemy.velocity -= enemy.velocity * decelebrate_speed * _delta</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func _on_enemy_damaged() -&gt; void:</span><br><span class="line">state_machine.ChangeState(<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line">func _on_animation_finsihed(_a: String) -&gt; void:</span><br><span class="line">animation_finished = true</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>Destroy  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyStateDestroy extends EnemyState</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var anmi_name: String = <span class="string">&quot;destroy&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export_category(<span class="params"><span class="string">&quot;AI&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@export var knockback_speed: float = <span class="number">200.0</span></span></span><br><span class="line"><span class="meta">@export var decelebrate_speed: float = <span class="number">10.0</span></span></span><br><span class="line"></span><br><span class="line">var direction: Vector2</span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line">enemy.EnemyDestroyed.connect(_on_enemy_destroyed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">enemy.invulnerable = true</span><br><span class="line">direction = enemy.global_position.direction_to(enemy.player.global_position)</span><br><span class="line">enemy.SetDirection(direction)</span><br><span class="line">enemy.velocity = direction * -knockback_speed</span><br><span class="line">enemy.UpdateAnimation(anmi_name)</span><br><span class="line">enemy.animation_player.animation_finished.connect(_on_animation_finsihed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line">enemy.invulnerable = false</span><br><span class="line">enemy.animation_player.animation_finished.disconnect(_on_animation_finsihed)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line">enemy.velocity -= enemy.velocity * decelebrate_speed * _delta</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func _on_enemy_destroyed() -&gt; void:</span><br><span class="line">state_machine.ChangeState(<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line">func _on_animation_finsihed(_a: String) -&gt; void:</span><br><span class="line">enemy.queue_free()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li>创建Destroy动画</li><li>添加HitBox节点</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>动画可以通过多个Track组合</li><li>Player击中HitBox，触发 HitBox的damaged信号</li><li>Enemy接收到信号触发takeDamaged方法，扣除hp，根据hp状态选择发送受伤信号或者死亡信号</li><li>stun节点监听受伤信号</li><li>destroy节点监听死亡信号</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏09———创建简单敌人（一）</title>
      <link href="/2025/04/20/godot4_2d/godot4_2d_09/"/>
      <url>/2025/04/20/godot4_2d/godot4_2d_09/</url>
      
        <content type="html"><![CDATA[<h3 id="创建一个敌人"><a href="#创建一个敌人" class="headerlink" title="创建一个敌人"></a>创建一个敌人</h3><ul><li>新建一个Enemies文件夹<ul><li>在下面创建Scripts文件夹</li><li>创建一个Slime文件夹，里面是史莱姆的相关文件</li><li>从网站下载Slime.png放入Slime文件夹</li><li>创建一个CharacterBody2D节点的场景，用来保存Slime相关的数据<ul><li>在这下面创建一个Sprite2D节点，保存Slime图像</li><li>再创建一个Sprite2D节点，放置阴影</li><li>创建一个CollisionShape2D节点，自己在9层，mask为5层，可以和Wall交互</li></ul></li><li>创建Slime动画<ul><li>创建idle的up、down、side</li><li>创建walk的up、down、side</li></ul></li><li>创建一个enemy.gd脚本，挂载到Slime节点上  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">class_name Enemy extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">signal DirectionChanged(<span class="built_in">dir</span>: Vector2)</span><br><span class="line">signal EnemyDamaged()</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var hp: int = <span class="number">3</span></span></span><br><span class="line"></span><br><span class="line">const DIR_ARR: Array[Vector2] = [Vector2.RIGHT, Vector2.DOWN, Vector2.LEFT, Vector2.UP]</span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line">var player: Player</span><br><span class="line">var invulnerable: <span class="built_in">bool</span> = false</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var state_machine: EnemyStateMachine = $EnemyStateMachine</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">state_machine.Initialize(<span class="variable language_">self</span>)</span><br><span class="line">player = PlayerManager.player</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(_delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">move_and_slide()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func SetDirection(_direction: Vector2) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">direction = _direction</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"></span><br><span class="line">var direction_id: <span class="built_in">int</span> = <span class="built_in">int</span>(<span class="built_in">round</span>((direction + cardinal_direction *  <span class="number">0.1</span>).angle() / TAU * DIR_ARR.size()))</span><br><span class="line">var new_dir = DIR_ARR[direction_id]</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"></span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">DirectionChanged.emit(new_dir)</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">func UpdateAnimation(state: String) -&gt; void:</span><br><span class="line">animation_player.play(state + <span class="string">&quot;_&quot;</span> + AnimationDirection())</span><br><span class="line"></span><br><span class="line">func AnimationDirection() -&gt; String:</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == Vector2.DOWN:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;down&quot;</span></span><br><span class="line"><span class="keyword">elif</span> cardinal_direction == Vector2.UP:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;up&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;side&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>创建一个enemy_state.gd脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyState extends Node</span><br><span class="line"></span><br><span class="line">var enemy: Enemy</span><br><span class="line">var state_machine: EnemyStateMachine</span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>创建一个enemy_state_machine.gd脚本，并创建一个EnemyStateMachine状态机节点，并将脚本挂载上去  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyStateMachine extends Node</span><br><span class="line"></span><br><span class="line">var states: Array[ EnemyState ]</span><br><span class="line">var prev_state: EnemyState</span><br><span class="line">var current_state: EnemyState</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">process_mode = Node.PROCESS_MODE_DISABLED</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.Process(delta))</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.PhysicsProcess(delta))</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Initialize(enemy: Enemy) -&gt; void:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_children():</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">is</span> EnemyState:</span><br><span class="line">states.append(c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> states:</span><br><span class="line">s.enemy = enemy</span><br><span class="line">s.state_machine = <span class="variable language_">self</span></span><br><span class="line">s.init()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> states.size() &gt; <span class="number">0</span>:</span><br><span class="line">ChangeState(states[<span class="number">0</span>])</span><br><span class="line">process_mode = Node.PROCESS_MODE_INHERIT</span><br><span class="line"></span><br><span class="line">func ChangeState(new_state: EnemyState) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> new_state == null || new_state  == current_state:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> current_state:</span><br><span class="line">current_state.Exit()</span><br><span class="line"></span><br><span class="line">prev_state = current_state</span><br><span class="line">current_state = new_state</span><br><span class="line">current_state.Enter()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>创建一个global_player_manager.gd脚本并配置Autoload<ul><li>在enemy.gd初始化时引用player</li><li>在player.gd初始化时设置PlayerManager</li></ul></li><li>在EnemyStateMachine下创建Idle状态机  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyStateIdle extends EnemyState</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var anmi_name: String = <span class="string">&quot;idle&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export_category(<span class="params"><span class="string">&quot;AI&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@export var state_duration_min: float = <span class="number">0.5</span></span></span><br><span class="line"><span class="meta">@export var state_duration_max: float = <span class="number">1.5</span></span></span><br><span class="line"><span class="meta">@export var after_idle_state: EnemyState</span></span><br><span class="line"></span><br><span class="line">var timer: <span class="built_in">float</span> = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">enemy.velocity = Vector2.ZERO</span><br><span class="line">timer = randf_range(state_duration_min, state_duration_max)</span><br><span class="line">enemy.UpdateAnimation(anmi_name)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line">timer -= _delta</span><br><span class="line"><span class="keyword">if</span> timer &lt;= <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> after_idle_state</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>在EnemyStateMachine下创建Wander状态机  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">class_name EnemyStateWander extends EnemyState</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var anmi_name: String = <span class="string">&quot;walk&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">@export_category(<span class="params"><span class="string">&quot;AI&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@export var state_animation_duration: float = <span class="number">0.7</span></span></span><br><span class="line"><span class="meta">@export var state_cycle_min: int = <span class="number">1</span></span></span><br><span class="line"><span class="meta">@export var state_cycle_max: int = <span class="number">3</span></span></span><br><span class="line"><span class="meta">@export var wander_speed: float = <span class="number">30.0</span></span></span><br><span class="line"><span class="meta">@export var next_state: EnemyState</span></span><br><span class="line"></span><br><span class="line">var timer: <span class="built_in">float</span> = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">func init() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">timer = randi_range(state_cycle_min, state_cycle_max) * state_animation_duration</span><br><span class="line">var direction_id = randi_range(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line">var direction = enemy.DIR_ARR[direction_id]</span><br><span class="line">enemy.velocity = direction * wander_speed</span><br><span class="line">enemy.SetDirection(direction)</span><br><span class="line">enemy.UpdateAnimation(anmi_name)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line">timer -= _delta</span><br><span class="line"><span class="keyword">if</span> timer &lt;= <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> next_state</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; EnemyState:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏08———相机限制</title>
      <link href="/2025/04/19/godot4_2d/godot4_2d_08/"/>
      <url>/2025/04/19/godot4_2d/godot4_2d_08/</url>
      
        <content type="html"><![CDATA[<h3 id="创建单例模式文件"><a href="#创建单例模式文件" class="headerlink" title="创建单例模式文件"></a>创建单例模式文件</h3><ul><li>新建一个00_Global文件夹，保证一直都在最上<ul><li><p>创建一个GlobalLevelManager脚本文件</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">extends Node</span><br><span class="line"></span><br><span class="line">var current_tilemap_bounds: Array[Vector2]</span><br><span class="line"></span><br><span class="line">signal TileMapBoundsChanged(bounds: Array[Vector2])</span><br><span class="line"></span><br><span class="line">func ChangeTileMapBounds(bounds: Array[Vector2]) -&gt; void:</span><br><span class="line">current_tilemap_bounds = bounds</span><br><span class="line">TileMapBoundsChanged.emit(bounds)</span><br></pre></td></tr></table></figure></li><li><p>添加到AutoLoad中</p></li></ul></li></ul><h3 id="创建Camera2D的脚本"><a href="#创建Camera2D的脚本" class="headerlink" title="创建Camera2D的脚本"></a>创建Camera2D的脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class_name PlayerCamera extends Camera2D</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">LevelManager.TileMapBoundsChanged.connect(UpdateLimits)</span><br><span class="line">UpdateLimits(LevelManager.current_tilemap_bounds)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func UpdateLimits(bounds: Array[Vector2]) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> bounds == []:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">limit_left  = <span class="built_in">int</span> (bounds[<span class="number">0</span>].x)</span><br><span class="line">limit_top = <span class="built_in">int</span> (bounds[<span class="number">0</span>].y)</span><br><span class="line">limit_right = <span class="built_in">int</span> (bounds[<span class="number">1</span>].x)</span><br><span class="line">limit_bottom = <span class="built_in">int</span> (bounds[<span class="number">1</span>].y)</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="为Grass-01创建脚本"><a href="#为Grass-01创建脚本" class="headerlink" title="为Grass-01创建脚本"></a>为Grass-01创建脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class_name LevelTileMap extends TileMapLayer</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">LevelManager.ChangeTileMapBounds(GetTileMapBounds())</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func GetTileMapBounds() -&gt; Array[Vector2]:</span><br><span class="line">var bounds: Array[Vector2] = []</span><br><span class="line">bounds.append(</span><br><span class="line">Vector2(get_used_rect().position * rendering_quadrant_size)</span><br><span class="line">)</span><br><span class="line">bounds.append(</span><br><span class="line">Vector2(get_used_rect().end * rendering_quadrant_size)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">return</span> bounds</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>场景加载时会更新全局的bounds</li><li>LevelManager会更新数据并发送信号</li><li>camera2D接收到信号并更新限制</li></ul><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul><li>遇到问题camera与tilemap对不上，查到原因是tilemap位置偏差没有在原点</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏07———游戏问题修改（HurtBox融进动画、修改Plant的HitBox范围 、修改任务方向选择方法）</title>
      <link href="/2025/04/19/godot4_2d/godot4_2d_07/"/>
      <url>/2025/04/19/godot4_2d/godot4_2d_07/</url>
      
        <content type="html"><![CDATA[<h3 id="将HurtBox放进Player的Sprite下"><a href="#将HurtBox放进Player的Sprite下" class="headerlink" title="将HurtBox放进Player的Sprite下"></a>将HurtBox放进Player的Sprite下</h3><ul><li>将HurtBox放进Player的Sprite下</li><li>配合攻击动画，添加HurtBox的关键帧，在攻击时修改HurtBox的位置</li></ul><h3 id="将Plant下的HitBox扩大"><a href="#将Plant下的HitBox扩大" class="headerlink" title="将Plant下的HitBox扩大"></a>将Plant下的HitBox扩大</h3><ul><li>右键图形选择那里选择make unique，然后将其覆盖整个草丛图片</li></ul><h3 id="修改Player中Direction部分"><a href="#修改Player中Direction部分" class="headerlink" title="修改Player中Direction部分"></a>修改Player中Direction部分</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">func SetDirection() -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将之前的x和y的判断修改成了角度判断，并且添加了当前方向的倾向</span></span><br><span class="line">var direction_id: <span class="built_in">int</span> = <span class="built_in">int</span>(<span class="built_in">round</span>((direction + cardinal_direction *  <span class="number">0.1</span>).angle() / TAU * DIR_ARR.size()))</span><br><span class="line">var new_dir = DIR_ARR[direction_id]</span><br><span class="line"><span class="built_in">print</span>(direction_id)</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"></span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">DirectionChanged.emit(new_dir)</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏06———添加攻击功能</title>
      <link href="/2025/04/18/godot4_2d/godot4_2d_06/"/>
      <url>/2025/04/18/godot4_2d/godot4_2d_06/</url>
      
        <content type="html"><![CDATA[<h3 id="创建新文件夹"><a href="#创建新文件夹" class="headerlink" title="创建新文件夹"></a>创建新文件夹</h3><ul><li>创建一个GeneralNodes文件夹来放置通用文件 <ul><li>在下面创建一个HitBox（被伤害的节点）<ul><li>创建一个Area2D类型的场景</li><li>取消Monitoring选项，不会主动检测碰撞</li><li>保留Monitorable选项，表示可以被检测</li><li>Collision选择第九层</li><li>创建一个hit_box的脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class_name HitBox extends Area2D</span><br><span class="line"></span><br><span class="line">signal Damaged( damage: <span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func TakeDamage( damage: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;take damage&quot;</span>,  damage)</span><br><span class="line">Damaged.emit(damage)</span><br></pre></td></tr></table></figure></li><li>创建一个信号，在收到伤害的时候发送信号，让监听的节点处理</li></ul></li><li>创建一个HurtBox（伤害节点）<ul><li>创建一个Area2D类型的场景</li><li>保留Monitoring选项，主动检测碰撞</li><li>取消Monitorable选项，不被检测碰撞</li><li>Collision Mask 第二层，表示和第二层的物体进行碰撞</li><li>创建一个hurt_box脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class_name HurtBox extends Area2D</span><br><span class="line"></span><br><span class="line"><span class="meta">@export var damage: int = <span class="number">1</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">area_entered.connect( AreaEntered )</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func AreaEntered( a : Area2D) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> a <span class="keyword">is</span> HitBox:</span><br><span class="line">a.TakeDamage(damage)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li>创建一个植物场景<ul><li><p>引入一个HitBox，表示这是一个可以被伤害的部分</p></li><li><p>加入一个staticBody</p></li><li><p>将其Layer设置为5，表示和第五层有交互的可以触碰</p></li><li><p>添加plant脚本</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> class_name Plant extends Node</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">$HitBox.Damaged.connect(TakeDamage)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func TakeDamage(damage: <span class="built_in">int</span>) -&gt; void:</span><br><span class="line">queue_free()</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>监听HitBox的通知</p></li><li><p>player和playground的y sort enable要打开</p></li></ul></li><li>Player添加一个Node2D类型的名称为Interaction的节点<ul><li><p>在这下面添加HurtBox，选择一个图形，表示可以造成伤害</p></li><li><p>在状态机Attack下添加代码</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;attack&quot;</span>)</span><br><span class="line">attack_animation_player.play(<span class="string">&quot;attack_&quot;</span> + player.AnimationDirection())</span><br><span class="line">animation_player.animation_finished.connect( EndAttack )</span><br><span class="line">audio.stream = audio_stream</span><br><span class="line">audio.pitch_scale = randf_range(<span class="number">0.9</span>, <span class="number">1.1</span>)</span><br><span class="line">audio.play()</span><br><span class="line">attacking = true</span><br><span class="line"><span class="keyword">await</span> get_tree().create_timer(<span class="number">0.075</span>).timeout</span><br><span class="line">hurt_box.monitoring = true</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line">animation_player.animation_finished.disconnect( EndAttack )</span><br><span class="line">hurt_box.monitoring = false</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>为Interaction节点添加脚本PlayerInteractionHost</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class_name PlayerInteractionHost extends Node2D</span><br><span class="line"></span><br><span class="line">@onready var player: Player = $&quot;..&quot;</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">player.DirectionChanged.connect(DirectionChanged)</span><br><span class="line">pass</span><br><span class="line"></span><br><span class="line">func DirectionChanged(direction: Vector2) -&gt; void:</span><br><span class="line">match direction:</span><br><span class="line">Vector2.DOWN:</span><br><span class="line">rotation_degrees = 0</span><br><span class="line">Vector2.UP:</span><br><span class="line">rotation_degrees= 180</span><br><span class="line">Vector2.LEFT:</span><br><span class="line">rotation_degrees = 90</span><br><span class="line">Vector2.RIGHT:</span><br><span class="line">rotation_degrees = -90</span><br><span class="line">_:</span><br><span class="line">rotation_degrees = 0</span><br><span class="line">pass</span><br></pre></td></tr></table></figure></li><li><p>同时修改Player脚本，新增信号，在收到DirectionChanged信号时修改hurtBox的方向</p></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏05———添加攻击动画</title>
      <link href="/2025/04/18/godot4_2d/godot4_2d_05/"/>
      <url>/2025/04/18/godot4_2d/godot4_2d_05/</url>
      
        <content type="html"><![CDATA[<h3 id="添加新素材"><a href="#添加新素材" class="headerlink" title="添加新素材"></a>添加新素材</h3><ul><li><p>从素材网站上 下载下来新的Player素材</p><ul><li><p>AttackSprite01.png</p></li><li><p>新增attack的三个特效</p></li><li><p>新增attack的状态机并添加脚本</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">class_name StateAttack extends State</span><br><span class="line"> </span><br><span class="line"><span class="meta">@export_range(<span class="params"><span class="number">1</span>, <span class="number">20</span>,  <span class="number">0.5</span></span>) var decelebrate_speed : float = <span class="number">5.0</span></span></span><br><span class="line"><span class="meta">@export var audio_stream: AudioStream</span></span><br><span class="line">var attacking: <span class="built_in">bool</span> =  false</span><br><span class="line"><span class="meta">@onready var walk: StateWalk = $<span class="string">&quot;../Walk&quot;</span></span></span><br><span class="line"><span class="meta">@onready var idle: StateIdle = $<span class="string">&quot;../Idle&quot;</span></span></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $<span class="string">&quot;../../AnimationPlayer&quot;</span></span></span><br><span class="line"><span class="meta">@onready var attack_animation_player: AnimationPlayer = $<span class="string">&quot;../../Sprite2D/AttackSprite2D/AttackAnimationPlayer&quot;</span></span></span><br><span class="line"><span class="meta">@onready var audio: AudioStreamPlayer2D = $<span class="string">&quot;../../Audio/AudioStreamPlayer2D&quot;</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;attack&quot;</span>)</span><br><span class="line">attack_animation_player.play(<span class="string">&quot;attack_&quot;</span> + player.AnimationDirection())</span><br><span class="line">animation_player.animation_finished.connect( EndAttack )</span><br><span class="line">audio.stream = audio_stream</span><br><span class="line">audio.pitch_scale = randf_range(<span class="number">0.9</span>, <span class="number">1.1</span>)</span><br><span class="line">audio.play()</span><br><span class="line">attacking = true</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line">animation_player.animation_finished.disconnect( EndAttack )</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(_delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line">player.velocity -= player.velocity * decelebrate_speed * _delta</span><br><span class="line"><span class="keyword">if</span> attacking == false:</span><br><span class="line"><span class="keyword">if</span> player.direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> idle</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> walk</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(_delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(_event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func EndAttack(_newAnimName: String) -&gt; void:</span><br><span class="line">attacking = false</span><br></pre></td></tr></table></figure></li><li><p>创建一个no_attack的动画，设置为auto，表示为默认 展示的，否则图片上会默认 展示第一帧</p></li></ul></li><li><p>修改idle和walk的状态机脚本</p><ul><li>添加按键监听，如果按下攻击键则进入attack模式</li><li>attack动画播放完后，根据用户状态进入walk或idle模式</li></ul></li></ul><h3 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h3><ul><li>创建一个节点，下面挂载AudioStreamPlayer2D节点</li><li>在attack脚本中添加export的audioStream，上面那个player用于播放</li></ul><h3 id="添加阴影"><a href="#添加阴影" class="headerlink" title="添加阴影"></a>添加阴影</h3><ul><li>创建一个新的sprite用来放置阴影</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏04———创建地图</title>
      <link href="/2025/04/18/godot4_2d/godot4_2d_04/"/>
      <url>/2025/04/18/godot4_2d/godot4_2d_04/</url>
      
        <content type="html"><![CDATA[<h3 id="创建新场景"><a href="#创建新场景" class="headerlink" title="创建新场景"></a>创建新场景</h3><ul><li>创建一个新的节点–TileMapLayer类型<ul><li>从网站下载 grass-01 素材</li><li>创建新tileset，并设置宽高为32px</li><li>在ordering中将zIndex设置为-1，设置为背景</li><li>将图片拖入TileSet中，在下方控制台中</li><li>在TileMapLayer节点中新增一个PhysicsLayer，collision为5（表示在第五层）</li><li>在TileSet中Paint选项中的PhysicsLayer中绘制所需的物理层图案</li><li>将Player的CollisionLayer的Mask层选中为5，表示与第五层的物理层产生碰撞</li><li>创建地形Terrain Set，添加一个Terrain</li><li>在用户节点下添加一个Camera2D节点</li><li>将Player的Motion Mode改为float，角度改为10</li><li>修改Player节点脚本中的_process代码  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">func _process(_delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line"><span class="comment">#direction.x = Input.get_action_strength(&quot;right&quot;) - Input.get_action_strength(&quot;left&quot;)</span></span><br><span class="line"><span class="comment">#direction.y = Input.get_action_strength(&quot;down&quot;) - Input.get_action_strength(&quot;up&quot;)</span></span><br><span class="line">direction = Vector2(</span><br><span class="line">Input.get_axis(<span class="string">&quot;left&quot;</span>, <span class="string">&quot;right&quot;</span>),</span><br><span class="line">Input.get_axis(<span class="string">&quot;up&quot;</span>, <span class="string">&quot;down&quot;</span>)</span><br><span class="line">).normalized()</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏03———添加人物状态机</title>
      <link href="/2025/04/17/godot4_2d/godot4_2d_03/"/>
      <url>/2025/04/17/godot4_2d/godot4_2d_03/</url>
      
        <content type="html"><![CDATA[<h3 id="添加状态机接口"><a href="#添加状态机接口" class="headerlink" title="添加状态机接口"></a>添加状态机接口</h3><ul><li>创建一个script，名称为state.gd</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class_name State extends Node</span><br><span class="line"></span><br><span class="line">static var player: Player</span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br></pre></td></tr></table></figure><p>这个接口是各个状态机方法属性的定义</p><h3 id="为Player添加StateMachine节点"><a href="#为Player添加StateMachine节点" class="headerlink" title="为Player添加StateMachine节点"></a>为Player添加StateMachine节点</h3><ul><li>在Player下创建一个StateMachine的节点<ul><li>在StateMachine下新添加两个子节点Idle和Walk</li></ul></li><li>创建 player_state_machine.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">class_name PlayerStateMachine extends Node</span><br><span class="line"></span><br><span class="line">var states: Array[ State ]</span><br><span class="line">var prev_state: State</span><br><span class="line">var current_state: State</span><br><span class="line"></span><br><span class="line">// 禁用所有StateMachine以及子节点的_process和_physics_process方法</span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">process_mode = Node.PROCESS_MODE_DISABLED</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.Process( delta ))</span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">ChangeState(current_state.PhysicsProcess( delta ))</span><br><span class="line"></span><br><span class="line">func _unhandled_input(event: InputEvent) -&gt; void:</span><br><span class="line">ChangeState(current_state.HandleInput( event ))</span><br><span class="line"></span><br><span class="line">// 获取所有子节点状态机并将第一个作为初始状态</span><br><span class="line">func Initialize(player: Player) -&gt; void:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> get_children():</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">is</span> State:</span><br><span class="line">states.append(c)</span><br><span class="line"><span class="keyword">if</span> states.size() &gt; <span class="number">0</span>:</span><br><span class="line">states[<span class="number">0</span>].player = player</span><br><span class="line">ChangeState(states[<span class="number">0</span>])</span><br><span class="line">process_mode = Node.PROCESS_MODE_INHERIT</span><br><span class="line"></span><br><span class="line">func ChangeState(new_state: State) -&gt; void:</span><br><span class="line"><span class="keyword">if</span> new_state == null || new_state  == current_state:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> current_state:</span><br><span class="line">current_state.Exit()</span><br><span class="line"></span><br><span class="line">prev_state = current_state</span><br><span class="line">current_state = new_state</span><br><span class="line">current_state.Enter()</span><br></pre></td></tr></table></figure><ul><li>将 player_state_machine.md 挂载到StateMachine节点上</li></ul></li></ul><h3 id="创建两个子状态的脚本"><a href="#创建两个子状态的脚本" class="headerlink" title="创建两个子状态的脚本"></a>创建两个子状态的脚本</h3><ul><li><p>state_idle.gd</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">class_name StateIdle extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var walk: StateWalk = $<span class="string">&quot;../Walk&quot;</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;idle&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction != Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> walk</span><br><span class="line">player.velocity = Vector2.ZERO</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line">class_name StateIdle extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var walk: StateWalk = $<span class="string">&quot;../Walk&quot;</span></span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;idle&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction != Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> walk</span><br><span class="line">player.velocity = Vector2.ZERO</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>state_walk.gd</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class_name StateWalk extends State</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var idle: StateIdle = $<span class="string">&quot;../Idle&quot;</span></span></span><br><span class="line">var move_speed: <span class="built_in">float</span> = <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func  Enter() -&gt; void:</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;walk&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Exit() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func Process(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">if</span> player.direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> idle</span><br><span class="line"></span><br><span class="line">player.velocity = player.direction * move_speed</span><br><span class="line"><span class="keyword">if</span> player.SetDirection():</span><br><span class="line">player.UpdateAnimation(<span class="string">&quot;walk&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func PhysicsProcess(delta: <span class="built_in">float</span>) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br><span class="line"></span><br><span class="line">func HandleInput(event: InputEvent) -&gt; State:</span><br><span class="line"><span class="keyword">return</span> null</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改Player节点的脚本"><a href="#修改Player节点的脚本" class="headerlink" title="修改Player节点的脚本"></a>修改Player节点的脚本</h3><ul><li>player.gd  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"><span class="meta">@onready var state_machine: PlayerStateMachine = $StateMachine</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">state_machine.Initialize(<span class="variable language_">self</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">move_and_slide()</span><br><span class="line"></span><br><span class="line">func SetDirection() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">var new_dir: Vector2 = cardinal_direction</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"><span class="keyword">if</span> direction.y == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.LEFT <span class="keyword">if</span> direction.x &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.RIGHT</span><br><span class="line"><span class="keyword">if</span> direction.x == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.UP <span class="keyword">if</span> direction.y &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.DOWN</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">func UpdateAnimation(state: String) -&gt; void:</span><br><span class="line">animation_player.play(state + <span class="string">&quot;_&quot;</span> + AnimationDirection())</span><br><span class="line"></span><br><span class="line">func AnimationDirection() -&gt; String:</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == Vector2.DOWN:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;down&quot;</span></span><br><span class="line"><span class="keyword">elif</span> cardinal_direction == Vector2.UP:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;up&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;side&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>创建一个StateMachine的节点，下面挂载多个子节点，通过获取子节点的方式动态扩展</li><li>用户节点脚本不再直接调用动画渲染，只修改direction</li><li>在执行StateMachine的_process和_physics_process方法时，调用当前State的对应方法来处理动画</li></ul>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏02———添加人物移动动画</title>
      <link href="/2025/04/16/godot4_2d/godot4_2d_02/"/>
      <url>/2025/04/16/godot4_2d/godot4_2d_02/</url>
      
        <content type="html"><![CDATA[<h2 id="添加人物移动动画"><a href="#添加人物移动动画" class="headerlink" title="添加人物移动动画"></a>添加人物移动动画</h2><h3 id="创建动画"><a href="#创建动画" class="headerlink" title="创建动画"></a>创建动画</h3><ul><li><p>动画一般有两种节点，一种为 AnimationPlayer, 另一种是 AnimatableSprite2D</p><ul><li>AnimationPlayer 功能更强大</li><li>AnimatableSprite2D 使用简但功能少</li></ul></li><li><p>在Player下创建一个AnimationPlayer节点</p><ul><li>在下方会出现一个工作台，创建新动画</li><li>选中Sprite2D节点，然后在Animation属性中找到frame，点击钥匙加号</li><li>然后在下方创建几个动画，idle和walk各三个</li></ul></li><li><p>在Player.gd脚本中添加一些代码</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line">var state: String = <span class="string">&quot;idle&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br></pre></td></tr></table></figure><ul><li>可以单击节点按住然后按command拖到gd脚本中来创建引用节点</li></ul></li></ul><h3 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h3><ul><li>修改Player.md代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">// 将属性和需要的节点抽取出来</span><br><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line">var direction: Vector2 = Vector2.ZERO</span><br><span class="line">var cardinal_direction: Vector2 = Vector2.DOWN</span><br><span class="line">var state: String = <span class="string">&quot;idle&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@onready var animation_player: AnimationPlayer = $AnimationPlayer</span></span><br><span class="line"><span class="meta">@onready var sprite: Sprite2D = $Sprite2D</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"></span><br><span class="line">velocity = direction * move_speed</span><br><span class="line">    // 如果状态或者方向改变了就更新</span><br><span class="line"><span class="keyword">if</span> SetState() || SetDirection():</span><br><span class="line">UpdateAnimation()</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">move_and_slide()</span><br><span class="line"></span><br><span class="line">// cardinal_direction是保持的状态方向，比如说之前向上，但是不按方向键也要维持向上的状态</span><br><span class="line">// direction是按键运动的方向，按方向键之后要更新方向</span><br><span class="line">func SetDirection() -&gt; <span class="built_in">bool</span>:</span><br><span class="line">var new_dir: Vector2 = cardinal_direction</span><br><span class="line"><span class="keyword">if</span> direction == Vector2.ZERO:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line"><span class="keyword">if</span> direction.y == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.LEFT <span class="keyword">if</span> direction.x &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.RIGHT</span><br><span class="line"><span class="keyword">if</span> direction.x == <span class="number">0</span>:</span><br><span class="line">new_dir = Vector2.UP <span class="keyword">if</span> direction.y &lt; <span class="number">0</span> <span class="keyword">else</span> Vector2.DOWN</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == direction:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">cardinal_direction = new_dir</span><br><span class="line">sprite.scale.x = -<span class="number">1</span> <span class="keyword">if</span> cardinal_direction == Vector2.LEFT <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">// 判断空闲状态还是行走状态，idle或walk</span><br><span class="line">func SetState() -&gt; <span class="built_in">bool</span>: </span><br><span class="line">var new_state: String = <span class="string">&quot;idle&quot;</span> <span class="keyword">if</span> direction == Vector2.ZERO <span class="keyword">else</span> <span class="string">&quot;walk&quot;</span></span><br><span class="line"><span class="keyword">if</span> new_state == state:</span><br><span class="line"><span class="keyword">return</span> false</span><br><span class="line">state = new_state</span><br><span class="line"><span class="keyword">return</span> true</span><br><span class="line"></span><br><span class="line">// 更新需要运行的动画</span><br><span class="line">func UpdateAnimation() -&gt; void:</span><br><span class="line">animation_player.play(state + <span class="string">&quot;_&quot;</span> + AnimationDirection())</span><br><span class="line"></span><br><span class="line">func AnimationDirection() -&gt; String:</span><br><span class="line"><span class="keyword">if</span> cardinal_direction == Vector2.DOWN:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;down&quot;</span></span><br><span class="line"><span class="keyword">elif</span> cardinal_direction == Vector2.UP:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;up&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;side&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>godot4制作2D游戏01———创建可移动人物</title>
      <link href="/2025/04/15/godot4_2d/godot4_2d_01/"/>
      <url>/2025/04/15/godot4_2d/godot4_2d_01/</url>
      
        <content type="html"><![CDATA[<h2 id="创建人物"><a href="#创建人物" class="headerlink" title="创建人物"></a>创建人物</h2><ul><li><p>创建2D场景，添加子节点CharacterBody2D类型</p></li><li><p>为CharacterBody2D添加一个碰撞类型，先选择圆形即可</p></li><li><p>从网站下载所需图片</p><ul><li><a href="https://michaelgames.itch.io/2d-action-adventure-rpg-assets">https://michaelgames.itch.io/2d-action-adventure-rpg-assets</a></li></ul></li><li><p>将文件导入项目，并创建Sprite，将Animtion的Hframes改为21</p></li><li><p>该项目为像素风格，所以需要修改一些项目参数</p><ul><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; window width 480 height 270</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; stretch viewpoint(很适合像素风)</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; 高级选项 -&gt; window width override -&gt; 1920</li><li>project -&gt; project setting -&gt; general -&gt; display -&gt;  window -&gt; 高级选项 -&gt; window height override -&gt; 1080</li><li>project -&gt; project setting -&gt; general -&gt; rending -&gt; textures -&gt; default texture filter-&gt; nearest</li></ul></li><li><p>添加按键控制</p><ul><li>project -&gt; project setting -&gt; input map <ul><li>添加上下左右控制即可</li></ul></li></ul></li><li><p>将Player save as scene 单独保存为一个场景</p></li></ul><h2 id="为Player添加代码"><a href="#为Player添加代码" class="headerlink" title="为Player添加代码"></a>为Player添加代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class_name Player extends CharacterBody2D</span><br><span class="line"></span><br><span class="line">var move_speed: <span class="built_in">float</span>  = <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">func _ready() -&gt; void:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">func _process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">    var direction: Vector2 = Vector2.ZERO</span><br><span class="line">    direction.x = Input.get_action_strength(<span class="string">&quot;right&quot;</span>) - Input.get_action_strength(<span class="string">&quot;left&quot;</span>)</span><br><span class="line">    direction.y = Input.get_action_strength(<span class="string">&quot;down&quot;</span>) - Input.get_action_strength(<span class="string">&quot;up&quot;</span>)</span><br><span class="line"></span><br><span class="line">    velocity = direction * move_speed</span><br><span class="line">    <span class="built_in">print</span>(velocity)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">func _physics_process(delta: <span class="built_in">float</span>) -&gt; void:</span><br><span class="line">    move_and_slide()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> godot4制作2D游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godot4制作2D游戏 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
